import logging

from db_api.deta_db.services import get_all_box, get_all_content_by_box_id, get_box, search_content_in_box, Box
# from locales.i18n_config import i18n
from misc.keyboards import box_inl_kb

# _ = i18n.gettext

HELP_MESSAGE_TEXT = ("""–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–¥–µ–ª–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–π –∏ —É–¥–æ–±–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–∫–ª–∞–¥.

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ - —è—â–∏–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ. 

–Ø—â–∏–∫–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å, —É–¥–∞–ª—è—Ç—å, 
–∞ —Ç–∞–∫–∂–µ –º–µ–Ω—è—Ç—å –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –º–µ—Å—Ç–æ –≥–¥–µ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è. 

–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å —è—â–∏–∫–∞–º–∏ - –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å, 
—É–¥–∞–ª—è—Ç—å, –∞ —Ç–∞–∫–∂–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–≥–æ-—Ç–æ –±—ã–ª–æ 2 –∞ —Å—Ç–∞–ª–æ 1)

–ö–æ–º–∞–Ω–¥—ã –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –±–æ—Ç–∞ –ø–æ–º–æ–≥—É—Ç —Å —ç—Ç–∏–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è.
–ö–æ–º–∞–Ω–¥—ã –≤—Å–µ–≥–æ —Ç—Ä–∏:
- /all_box - –æ—Ç–æ–±—Ä–∞–∑–∏—Ç –≤—Å–µ —è—â–∏–∫–∏
- /add_box - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —è—â–∏–∫
- –≤–≤–µ–¥–∏ –ª—é–±–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –µ–≥–æ –≤ —è—â–∏–∫–∞—Ö""")

EXAMPLE_BOXES_TEXT = (
    '–Ø—â–∏–∫ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞, —É–¥–∞–ª–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, —Ç–∞–∫–∂–µ –∫–∞–∫ –∏ —è—â–∏–∫, –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è!{}–ú–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π /add_box').format('\n')

MSG_LIST_FOOTER = "\n\nüì¶" + ("/add_box - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —è—â–∏–∫") + \
                  "\nüîé " + ("–ø–æ–∏—Å–∫ - –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —á—Ç–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏")


async def box_with_contents(box: Box):
    """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —è—â–∏–∫–∞ —Å –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ"""
    text = f"üì¶<b>{box.name}\nüìç{box.place}</b>" + \
           "\n\nüìã" + ("–°–µ–π—á–∞—Å –≤ —è—â–∏–∫–µ:")
    contents = await get_all_content_by_box_id(box_id=box.key)
    if contents:
        contents_list = '\n- '.join(content.name for content in contents)
        text += f"\n- {contents_list}"
    else:
        text += '\n - ' + ('–Ω–∏—á–µ–≥–æ')
    return text


async def box_view(user_id: int, box_id: str,
                   menu_only: bool = False,
                   box_menu: bool = False,
                   confirm_menu: bool = False) -> dict:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Ç–µ–∫—Å—Ç + –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç
    –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å —è—â–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é(–∫–æ—Ç–æ—Ä—ã–π —Å–¥–µ–ª–∞–ª –∑–∞–ø—Ä–æ—Å) –∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —è—â–∏–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ"""
    box = await get_box(user_id, box_id)
    if type(box) is Box:
        return {'text': await box_with_contents(box),
                'reply_markup': box_inl_kb(box_id, menu_only, box_menu, confirm_menu)
                }
    elif type(box) is bool:
        logging.warning(f'{user_id} is forbidden to open {box_id}')
    return {'text': ('‚ùå –Ø—â–∏–∫ <b>{box_id} - –Ω–µ –Ω–∞–π–¥–µ–Ω</b>.').format(box_id=box_id) + MSG_LIST_FOOTER}


def boxes_view(boxes: tuple[Box] = None) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º —è—â–∏–∫–æ–≤ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if boxes:
        msg = ('üìõ–ò–º—è|üìç–ú–µ—Å—Ç–æ|üîóÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ —è—â–∏–∫') + '\n'
        for index, box in enumerate(boxes, 1):
            msg += f"\n{index}. {box.name} | {box.place} <b>/box_{box.key}</b>"
        msg += MSG_LIST_FOOTER
        return msg
    return '‚ùå ' + ('<b>–£ –í–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —è—â–∏–∫–æ–≤.</b>') + MSG_LIST_FOOTER


async def all_boxes_view(user_id: int) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö —è—â–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ"""
    boxes = await get_all_box(user_id)
    return boxes_view(boxes)


async def search_item_in_box(user_id: int, item: str) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≤—Å–µ–º —è—â–∏–∫–∞–º"""
    boxes = await search_content_in_box(user_id=user_id, item_to_find=item)
    if boxes:
        return "üîé <b>" + ("–ù–∞–π–¥–µ–Ω–æ –≤:") + f"</b>\n\n{boxes_view(boxes)}"
    return "‚ùå " + ("<b>–ù–µ –Ω–∞–π–¥–µ–Ω–æ</b>, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —á–∞—Å—Ç—å —Å–ª–æ–≤–∞")
